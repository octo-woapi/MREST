plugins {
	id 'java'
	id 'org.springframework.boot' version "${globalSpringBootVersion}"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
		vendor = JvmVendorSpec.ADOPTOPENJDK
	}
}

group = 'com.example.api'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

ext {
	logbackVersion = '1.2.10'
	logbackContribVersion = '0.1.5'
	lombokVersion = '1.18.22'
	springdocVersion = '1.6.5'
}

dependencies {
	runtimeOnly 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'

	implementation "ch.qos.logback:logback-classic:${logbackVersion}"
	implementation "ch.qos.logback.contrib:logback-json-classic:${logbackContribVersion}"
	implementation "ch.qos.logback.contrib:logback-jackson:${logbackContribVersion}"

	implementation "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\nTest result: ${result.resultType}"
			println "Test summary: ${result.testCount} tests, " +
					"${result.successfulTestCount} succeeded, " +
					"${result.failedTestCount} failed, " +
					"${result.skippedTestCount} skipped"
		}
	}
}

wrapper {
	gradleVersion = '7.3.3'
}
